{
    "posts": [
        {
           "id": 1,
    "title": "React v16.9.0 and the Roadmap Update",
    "image_url": "https://miro.medium.com/max/1050/1*i3hzpSEiEEMTuWIYviYweQ.png",
    "avatar_url": "https://miro.medium.com/max/4096/1*wiOSfPd2sY0gXSNK9vv6bg.jpeg",
    "author": "Dan Abramov,",
    "content": "Renaming Unsafe Lifecycle Methods Over a year ago, we announced that unsafe lifecycle methods are getting renamed: componentWillMount → UNSAFE_componentWillMount componentWillReceiveProps → UNSAFE_componentWillReceiveProps componentWillUpdate → UNSAFE_componentWillUpdate React 16.9 does not contain breaking changes, and the old names continue to work in this release. But you will now see a warning when using any of the old names: Warning: componentWillMount has been renamed, and is not recommended for use.",
    "topic": "React.js",
    "publication_date": "2019-08-08"
            
        },
        {
            "id": 2,
    "title": "React v16.7: No, This Is Not the One With Hooks",
    "image_url": "https://miro.medium.com/max/3158/1*kEPCQNY4dwVyaFuLEwJcNQ.png",
    "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
    "author": "Andrew Clark",
    "content": "React follows semantic versioning. Typically, this means that we use patch versions for bugfixes, and minors for new (non-breaking) features. However, we reserve the option to release minor versions even if they do not include new features. The motivation is to reserve patches for changes that have a very low chance of breaking. Patches are the most important type of release because they sometimes contain critical bugfixes.",
            "topic": "React.js",
            "publication_date": "2018-12-19"
        },
        {
            "id": 3,
            "title": "Building Great User Experiences with Concurrent Mode and Suspense",
            "image_url": "https://cdn.buttercms.com/O007i3wQgmRBu4ru92yF",
            "avatar_url": "https://images.squarespace-cdn.com/content/v1/6042ecd4513f6b5c4dc91aaf/1615155824885-GIE4JGQZG2QOVGL294PK/ke17ZwdGBToddI8pDm48kF4bdfD-ia1l4Dx5GCxoHspZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpyFxcEUL_E3rtTKOK6YDZfFOvno4nmWnq-VrpVZhpg5d7A5XYUWepj6KEiZHiJnCAU/Screen+Shot+2021-03-07+at+5.23.16+PM.png",
            "author": "Joseph Savona",
            "content": "The React team and community has long placed a deserved emphasis on developer experience: ensuring that React has good error messages, focusing on components as a way to reason locally about app behavior, crafting APIs that are predictable and encourage correct usage by design, etc. But we haven’t provided enough guidance on the best ways to achieve a great user experience in large apps",
            "topic": "React.js",
            "publication_date": "2020-11-11"
        },
        {
            "id": 4,
    "title": "Introducing The Problem Solver React v17.0",
    "image_url": "https://i.morioh.com/201014/e14da0fb.webp",
    "avatar_url": "https://miro.medium.com/max/4096/1*wiOSfPd2sY0gXSNK9vv6bg.jpeg",
    "author": "Dan Abramov,",
    "content": "Today, we are releasing React 17! We’ve written at length about the role of the React 17 release and the changes it contains in the React 17 RC blog post. This post is a brief summary of it, so if you’ve already read the RC post, you can skip this one. No New Features The React 17 release is unusual because it doesn’t add any new developer-facing features.",
            "topic": "ReactJs",
            "publication_date": "2020-10-20"
        },
        {
            "id": 5,
            "title": "What about the React v16.13.0 That we Developed",
            "image_url": "https://www.hkinfosoft.com/wp-content/uploads/2020/02/react-banner.png",
            "avatar_url": "https://i.pinimg.com/280x280_RS/2d/61/90/2d6190d6a11e233ee84cac73cc8a7e5f.jpg",
            "author": "Sunil Pai",
            "topic": "ReactJs",
            "publication_date": "2020-02-06",
              "content": "Today we are releasing React 16.13.0. It contains bugfixes and new deprecation warnings to help prepare for a future major release. New Warnings Warnings for some updates during render A React component should not cause side effects in other components during rendering. It is supported to call setState during render, but only for the same component."
        },
        {
            "id": 6,
            "title": "React v16.4.2: Server-side vulnerability fix",
            "image_url": "https://community-cdn-digitalocean-com.global.ssl.fastly.net/variants/eSpohinjrEQFb4B54C2RGDQi/035575f2985fe451d86e717d73691e533a1a00545d7230900ed786341dc3c882",
            "avatar_url": "https://miro.medium.com/max/4096/1*wiOSfPd2sY0gXSNK9vv6bg.jpeg",
            "author": "Dan Abramov",
            "topic": "React.js",
            "content": "Today, we are releasing a fix for a vulnerability we discovered in the react-dom/server implementation. It was introduced with the version 16.0.0 and has existed in all subsequent releases until today. This vulnerability can only affect some server-rendered React apps. Purely client-rendered apps are not affected.",
            "publication_date": "2018-07-03"
        },
        {
            "id": 7,
            "title": "Introducing Zero-Bundle-Size React Server Components",
            "image_url": "https://ahmadawais.com/wp-content/uploads/2020/12/react-server-components.jpg",
            "avatar_url": "https://miro.medium.com/max/4096/1*wiOSfPd2sY0gXSNK9vv6bg.jpeg",
            "author": "Dan Abramov",
            "topic": "ReactJs",
            "content": "2020 has been a long year. As it comes to an end we wanted to share a special Holiday Update on our research into zero-bundle-size React Server Components.To introduce React Server Components, we have prepared a talk and a demo. If you want, you can check them out during the holidays, or later when work picks back up in the new year.React Server Components are still in research and development. We are sharing this work in the spirit of transparency and to get initial feedback from the React community.",
            "publication_date": "2020-12-21"
        },
        {
            "id": 8,
            "title": "Introducing the New JSX Transform",
            "image_url": "https://assets.ccbp.in/frontend/content/react-js/introducing-the-new-jsx-transform.png",
            "avatar_url": "https://reactjs.org/static/afb31f3065fd4e93dc7c21e8d316983e/b17f8/lunaruan.jpg",
            "author": "Luna Ruan",
            "topic": "ReactJs",
            "content": "Although React 17 doesn’t contain new features, it will provide support for a new version of the JSX transform. In this post, we will describe what it is and how to try it.What’s a JSX Transform?Browsers don’t understand JSX out of the box, so most React users rely on a compiler like Babel or TypeScript to transform JSX code into regular JavaScript.",
            "publication_date": "2020-10-21"
        },
        {
            "id": 9,
            "title": "Introducing the New React DevTools",
            "image_url": "https://reactjs.org/static/9552e88d7605ef4e547af89096a9225d/1e088/devtools-v4-screenshot.png",
            "avatar_url": "https://egghead.io/_next/image?url=https%3A%2F%2Fimage.simplecastcdn.com%2Fimages%2F2ac34c%2F2ac34cab-4949-40aa-bac7-d7e3a70f0a39%2F4c24a78b-f2fd-41f2-87e9-265ead1acb93%2F1534346357artwork.jpg&w=384&q=75",
            "author": "Brian Vaughn",
            "topic": "React.js",
            "content": "We are excited to announce a new release of the React Developer Tools, available today in Chrome, Firefox, and (Chromium) Edge! What’s changed? A lot has changed in version 4! At a high level, this new version should offer significant performance gains and an improved navigation experience. It also offers full support for React Hooks, including inspecting nested objects. DevTools version 4 screenshot Visit the interactive tutorial to try out the new version or see the changelog for demo videos and more details.",
            "publication_date": "2019-08-15"
        },
        {
            "id": 10,
            "title": "Sneak Peek: Beyond React 16",
            "image_url": "https://on.notist.cloud/slides/deck1964/large-58.png",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "author": "Andrew Clark",
            "topic": "React.js",
            "content": "About the Two Demos On the first demo, Dan says: “We’ve built a generic way to ensure that high-priority updates don’t get blocked by a low-priority update, called time slicing. If my device is fast enough, it feels almost like it’s synchronous; if my device is slow, the app still feels responsive. It adapts to the device thanks to the requestIdleCallback API.",
            "publication_date": "2018-11-23"
        }
    ]
}
